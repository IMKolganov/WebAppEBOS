// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebAppEBOS.Entity;

#nullable disable

namespace WebAppEBOS.Entity.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230818141641_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WebAppEBOS.Entity.Entites.Call", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CallDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("CallRating")
                        .HasColumnType("int");

                    b.Property<int>("CallStatus")
                        .HasColumnType("int");

                    b.Property<int?>("CallerId")
                        .HasColumnType("int");

                    b.Property<string>("CallerPhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("DurationInSeconds")
                        .HasColumnType("int");

                    b.Property<bool>("IsArchived")
                        .HasColumnType("bit");

                    b.Property<int?>("ReceiverId")
                        .HasColumnType("int");

                    b.Property<string>("ReceiverPhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Calls", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CallDateTime = new DateTime(2023, 8, 18, 16, 46, 41, 27, DateTimeKind.Local).AddTicks(2750),
                            CallRating = 4,
                            CallStatus = 2,
                            CallerId = 1,
                            CallerPhoneNumber = "123-456-7890",
                            Created = new DateTime(2023, 8, 18, 14, 16, 41, 27, DateTimeKind.Utc).AddTicks(2697),
                            Description = "Discuss project status",
                            DurationInSeconds = 1800,
                            IsArchived = false,
                            ReceiverId = 2,
                            ReceiverPhoneNumber = "987-654-3210",
                            StartTime = new DateTime(2023, 8, 18, 16, 46, 41, 27, DateTimeKind.Local).AddTicks(2704),
                            Status = 1,
                            Subject = "Meeting",
                            Updated = new DateTime(2023, 8, 18, 14, 16, 41, 27, DateTimeKind.Utc).AddTicks(2699)
                        },
                        new
                        {
                            Id = 2,
                            CallDateTime = new DateTime(2023, 8, 18, 15, 16, 41, 27, DateTimeKind.Local).AddTicks(2761),
                            CallRating = 3,
                            CallStatus = 1,
                            CallerId = 3,
                            CallerPhoneNumber = "555-123-4567",
                            Created = new DateTime(2023, 8, 18, 14, 16, 41, 27, DateTimeKind.Utc).AddTicks(2756),
                            Description = "Planning session",
                            DurationInSeconds = 2700,
                            IsArchived = true,
                            ReceiverId = 4,
                            ReceiverPhoneNumber = "555-987-6543",
                            StartTime = new DateTime(2023, 8, 18, 15, 16, 41, 27, DateTimeKind.Local).AddTicks(2757),
                            Status = 1,
                            Subject = "Conference Call",
                            Updated = new DateTime(2023, 8, 18, 14, 16, 41, 27, DateTimeKind.Utc).AddTicks(2756)
                        },
                        new
                        {
                            Id = 3,
                            CallDateTime = new DateTime(2023, 8, 18, 12, 16, 41, 27, DateTimeKind.Local).AddTicks(2766),
                            CallRating = 2,
                            CallStatus = 2,
                            CallerId = 6,
                            CallerPhoneNumber = "111-222-3333",
                            Created = new DateTime(2023, 8, 18, 14, 16, 41, 27, DateTimeKind.Utc).AddTicks(2763),
                            Description = "Technical assistance",
                            DurationInSeconds = 1200,
                            IsArchived = false,
                            ReceiverId = 7,
                            ReceiverPhoneNumber = "444-555-6666",
                            StartTime = new DateTime(2023, 8, 18, 12, 16, 41, 27, DateTimeKind.Local).AddTicks(2764),
                            Status = 1,
                            Subject = "Support Call",
                            Updated = new DateTime(2023, 8, 18, 14, 16, 41, 27, DateTimeKind.Utc).AddTicks(2763)
                        },
                        new
                        {
                            Id = 4,
                            CallDateTime = new DateTime(2023, 8, 18, 7, 16, 41, 27, DateTimeKind.Local).AddTicks(2772),
                            CallRating = 4,
                            CallStatus = 1,
                            CallerId = 8,
                            CallerPhoneNumber = "999-888-7777",
                            Created = new DateTime(2023, 8, 18, 14, 16, 41, 27, DateTimeKind.Utc).AddTicks(2768),
                            Description = "Product presentation",
                            DurationInSeconds = 1500,
                            IsArchived = true,
                            ReceiverId = 9,
                            ReceiverPhoneNumber = "777-888-9999",
                            StartTime = new DateTime(2023, 8, 18, 7, 16, 41, 27, DateTimeKind.Local).AddTicks(2769),
                            Status = 1,
                            Subject = "Sales Call",
                            Updated = new DateTime(2023, 8, 18, 14, 16, 41, 27, DateTimeKind.Utc).AddTicks(2768)
                        },
                        new
                        {
                            Id = 5,
                            CallDateTime = new DateTime(2023, 8, 18, 16, 46, 41, 27, DateTimeKind.Local).AddTicks(2776),
                            CallRating = 4,
                            CallStatus = 2,
                            CallerId = 1,
                            CallerPhoneNumber = "123-456-7890",
                            Created = new DateTime(2023, 8, 18, 14, 16, 41, 27, DateTimeKind.Utc).AddTicks(2773),
                            Description = "Discuss project status",
                            DurationInSeconds = 1800,
                            IsArchived = false,
                            ReceiverId = 2,
                            ReceiverPhoneNumber = "987-654-3210",
                            StartTime = new DateTime(2023, 8, 18, 16, 46, 41, 27, DateTimeKind.Local).AddTicks(2774),
                            Status = 1,
                            Subject = "Meeting",
                            Updated = new DateTime(2023, 8, 18, 14, 16, 41, 27, DateTimeKind.Utc).AddTicks(2773)
                        },
                        new
                        {
                            Id = 6,
                            CallDateTime = new DateTime(2023, 8, 18, 15, 16, 41, 27, DateTimeKind.Local).AddTicks(2781),
                            CallRating = 3,
                            CallStatus = 1,
                            CallerId = 3,
                            CallerPhoneNumber = "555-123-4567",
                            Created = new DateTime(2023, 8, 18, 14, 16, 41, 27, DateTimeKind.Utc).AddTicks(2779),
                            Description = "Planning session",
                            DurationInSeconds = 2700,
                            IsArchived = true,
                            ReceiverId = 4,
                            ReceiverPhoneNumber = "555-987-6543",
                            StartTime = new DateTime(2023, 8, 18, 15, 16, 41, 27, DateTimeKind.Local).AddTicks(2780),
                            Status = 1,
                            Subject = "Conference Call",
                            Updated = new DateTime(2023, 8, 18, 14, 16, 41, 27, DateTimeKind.Utc).AddTicks(2779)
                        },
                        new
                        {
                            Id = 7,
                            CallDateTime = new DateTime(2023, 8, 18, 12, 16, 41, 27, DateTimeKind.Local).AddTicks(2785),
                            CallRating = 2,
                            CallStatus = 2,
                            CallerId = 6,
                            CallerPhoneNumber = "111-222-3333",
                            Created = new DateTime(2023, 8, 18, 14, 16, 41, 27, DateTimeKind.Utc).AddTicks(2783),
                            Description = "Technical assistance",
                            DurationInSeconds = 1200,
                            IsArchived = false,
                            ReceiverId = 7,
                            ReceiverPhoneNumber = "444-555-6666",
                            StartTime = new DateTime(2023, 8, 18, 12, 16, 41, 27, DateTimeKind.Local).AddTicks(2784),
                            Status = 1,
                            Subject = "Support Call",
                            Updated = new DateTime(2023, 8, 18, 14, 16, 41, 27, DateTimeKind.Utc).AddTicks(2783)
                        },
                        new
                        {
                            Id = 8,
                            CallDateTime = new DateTime(2023, 8, 18, 7, 16, 41, 27, DateTimeKind.Local).AddTicks(2789),
                            CallRating = 4,
                            CallStatus = 1,
                            CallerId = 8,
                            CallerPhoneNumber = "999-888-7777",
                            Created = new DateTime(2023, 8, 18, 14, 16, 41, 27, DateTimeKind.Utc).AddTicks(2787),
                            Description = "Product presentation",
                            DurationInSeconds = 1500,
                            IsArchived = true,
                            ReceiverId = 9,
                            ReceiverPhoneNumber = "777-888-9999",
                            StartTime = new DateTime(2023, 8, 18, 7, 16, 41, 27, DateTimeKind.Local).AddTicks(2788),
                            Status = 1,
                            Subject = "Sales Call",
                            Updated = new DateTime(2023, 8, 18, 14, 16, 41, 27, DateTimeKind.Utc).AddTicks(2787)
                        },
                        new
                        {
                            Id = 9,
                            CallDateTime = new DateTime(2023, 8, 18, 2, 16, 41, 27, DateTimeKind.Local).AddTicks(2793),
                            CallRating = 3,
                            CallStatus = 2,
                            CallerId = 10,
                            CallerPhoneNumber = "123-987-6543",
                            Created = new DateTime(2023, 8, 18, 14, 16, 41, 27, DateTimeKind.Utc).AddTicks(2791),
                            Description = "Customer satisfaction survey",
                            DurationInSeconds = 900,
                            IsArchived = false,
                            ReceiverId = 11,
                            ReceiverPhoneNumber = "555-123-4567",
                            StartTime = new DateTime(2023, 8, 18, 2, 16, 41, 27, DateTimeKind.Local).AddTicks(2792),
                            Status = 1,
                            Subject = "Feedback Call",
                            Updated = new DateTime(2023, 8, 18, 14, 16, 41, 27, DateTimeKind.Utc).AddTicks(2791)
                        },
                        new
                        {
                            Id = 10,
                            CallDateTime = new DateTime(2023, 8, 17, 21, 16, 41, 27, DateTimeKind.Local).AddTicks(2798),
                            CallRating = 2,
                            CallStatus = 1,
                            CallerId = 12,
                            CallerPhoneNumber = "777-555-8888",
                            Created = new DateTime(2023, 8, 18, 14, 16, 41, 27, DateTimeKind.Utc).AddTicks(2795),
                            Description = "Promotion details",
                            DurationInSeconds = 1800,
                            IsArchived = true,
                            ReceiverId = 13,
                            ReceiverPhoneNumber = "222-444-6666",
                            StartTime = new DateTime(2023, 8, 17, 21, 16, 41, 27, DateTimeKind.Local).AddTicks(2796),
                            Status = 1,
                            Subject = "Marketing Call",
                            Updated = new DateTime(2023, 8, 18, 14, 16, 41, 27, DateTimeKind.Utc).AddTicks(2795)
                        });
                });

            modelBuilder.Entity("WebAppEBOS.Entity.Entites.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Path")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PostCode")
                        .HasColumnType("int");

                    b.Property<int>("RefAppId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("TelephoneHomeNumber")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("TelephonePhoneNumber")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("TelephoneWorkNumber")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Customers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "123 Main St",
                            Country = "USA",
                            Created = new DateTime(2023, 8, 18, 14, 16, 41, 27, DateTimeKind.Utc).AddTicks(4578),
                            DateBirth = new DateTime(1985, 5, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "John",
                            Path = "path/to/file1",
                            PostCode = 12345,
                            RefAppId = 1,
                            Status = 1,
                            Surname = "Doe",
                            TelephoneHomeNumber = "123-456-7890",
                            TelephonePhoneNumber = "987-654-3210",
                            TelephoneWorkNumber = "555-123-4567",
                            Updated = new DateTime(2023, 8, 18, 14, 16, 41, 27, DateTimeKind.Utc).AddTicks(4579)
                        },
                        new
                        {
                            Id = 2,
                            Address = "456 Elm St",
                            Country = "Canada",
                            Created = new DateTime(2023, 8, 18, 14, 16, 41, 27, DateTimeKind.Utc).AddTicks(4588),
                            DateBirth = new DateTime(1990, 8, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Emily",
                            Path = "path/to/file2",
                            PostCode = 56789,
                            RefAppId = 2,
                            Status = 1,
                            Surname = "Smith",
                            TelephoneHomeNumber = "555-789-1234",
                            TelephonePhoneNumber = "444-321-5678",
                            TelephoneWorkNumber = "777-555-8888",
                            Updated = new DateTime(2023, 8, 18, 14, 16, 41, 27, DateTimeKind.Utc).AddTicks(4588)
                        },
                        new
                        {
                            Id = 3,
                            Address = "789 Oak St",
                            Country = "USA",
                            Created = new DateTime(2023, 8, 18, 14, 16, 41, 27, DateTimeKind.Utc).AddTicks(4591),
                            DateBirth = new DateTime(1992, 3, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Jessica",
                            Path = "path/to/file3",
                            PostCode = 67890,
                            RefAppId = 3,
                            Status = 1,
                            Surname = "Johnson",
                            TelephoneHomeNumber = "777-111-2222",
                            TelephonePhoneNumber = "888-333-4444",
                            TelephoneWorkNumber = "555-666-7777",
                            Updated = new DateTime(2023, 8, 18, 14, 16, 41, 27, DateTimeKind.Utc).AddTicks(4591)
                        },
                        new
                        {
                            Id = 4,
                            Address = "567 Maple St",
                            Country = "USA",
                            Created = new DateTime(2023, 8, 18, 14, 16, 41, 27, DateTimeKind.Utc).AddTicks(4593),
                            DateBirth = new DateTime(1988, 12, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Daniel",
                            Path = "path/to/file4",
                            PostCode = 34567,
                            RefAppId = 4,
                            Status = 1,
                            Surname = "Williams",
                            TelephoneHomeNumber = "999-444-5555",
                            TelephonePhoneNumber = "222-555-6666",
                            TelephoneWorkNumber = "333-666-7777",
                            Updated = new DateTime(2023, 8, 18, 14, 16, 41, 27, DateTimeKind.Utc).AddTicks(4593)
                        },
                        new
                        {
                            Id = 5,
                            Address = "101 Pine St",
                            Country = "USA",
                            Created = new DateTime(2023, 8, 18, 14, 16, 41, 27, DateTimeKind.Utc).AddTicks(4621),
                            DateBirth = new DateTime(1993, 7, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Sophia",
                            Path = "path/to/file5",
                            PostCode = 12345,
                            RefAppId = 5,
                            Status = 1,
                            Surname = "Brown",
                            TelephoneHomeNumber = "111-222-3333",
                            TelephonePhoneNumber = "444-555-6666",
                            TelephoneWorkNumber = "777-888-9999",
                            Updated = new DateTime(2023, 8, 18, 14, 16, 41, 27, DateTimeKind.Utc).AddTicks(4621)
                        },
                        new
                        {
                            Id = 6,
                            Address = "202 Oak St",
                            Country = "USA",
                            Created = new DateTime(2023, 8, 18, 14, 16, 41, 27, DateTimeKind.Utc).AddTicks(4625),
                            DateBirth = new DateTime(1991, 11, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Ethan",
                            Path = "path/to/file6",
                            PostCode = 67890,
                            RefAppId = 6,
                            Status = 1,
                            Surname = "Taylor",
                            TelephoneHomeNumber = "555-777-8888",
                            TelephonePhoneNumber = "222-444-5555",
                            TelephoneWorkNumber = "111-888-9999",
                            Updated = new DateTime(2023, 8, 18, 14, 16, 41, 27, DateTimeKind.Utc).AddTicks(4625)
                        });
                });

            modelBuilder.Entity("WebAppEBOS.Entity.Entites.Identity.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Roles", (string)null);
                });

            modelBuilder.Entity("WebAppEBOS.Entity.Entites.Identity.RoleClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("RoleClaims", (string)null);
                });

            modelBuilder.Entity("WebAppEBOS.Entity.Entites.Identity.UserClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("UserClaims", (string)null);
                });

            modelBuilder.Entity("WebAppEBOS.Entity.Entites.Identity.UserLogin", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("LoginProvider")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProviderKey")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("datetime2");

                    b.HasKey("UserId");

                    b.ToTable("UserLogins", (string)null);
                });

            modelBuilder.Entity("WebAppEBOS.Entity.Entites.Identity.UserRole", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    b.Property<int>("RoleId")
                        .HasColumnType("int")
                        .HasColumnOrder(2);

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("datetime2");

                    b.HasKey("UserId", "RoleId");

                    b.ToTable("UserRoles", (string)null);
                });

            modelBuilder.Entity("WebAppEBOS.Entity.Entites.Identity.UserToken", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("datetime2");

                    b.HasKey("UserId", "LoginProvider", "Value");

                    b.ToTable("UserTokens", (string)null);
                });

            modelBuilder.Entity("WebAppEBOS.Entity.Entites.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
